'use strict';
const controller = {};

const async = require('async');
var Promise = require("bluebird");
var utilirs = require('../models/utils');
var moment = require("moment");
var S = require('string');
const md5 = require('md5');

controller.cetakstruk = async (req, res) => {
    console.log(req.body);
    var idpel = req.body.idpel;
    var tgl = req.body.tanggal;

    try {
        let datacetak = await utilirs.runQuerySelectPromise(req, "SELECT keterangan,idtransaksi,nominal,tanggal,jam,idterminal,sn,nominal,tujuan \
    FROM transaksi WHERE statustransaksi=1 and jenistransaksi=0 and tujuan=? AND tanggal=? LIMIT 5", [idpel, tgl]);
        if (datacetak.length > 0) {
            if (datacetak.length > 1) {
                var resp = '';
                await Promise.all(dataTrx.datacetak(async row => {
                    resp = resp + "<a href='#' style='font-size:12px;margin:3px' onclick='cekbydenom(" + row.idtransaksi + ")' id = $row -> idtransaksi class='denom btn btn - success' > " + row.tanggal + ' ' + row.jam + " PLN" + row.nominal + ".000</a > ";
                }));
                res.json({ success: true, jml: datacetak.length, msg: resp }); return;
            } else {

                var sn = datacetak[0].sn;
                var msg = sn.toUpperCase();
                msg = S(msg).replaceAll('/', '@').s;
                var nominal = datacetak[0].nominal;
                var waktutrx = datacetak[0].jam;

                res.json({ success: true, jml: 1, msg: "SN@" + msg + "@" + nominal + "@" + idpel + "@" + waktutrx + "@" + md5(msg) }); return;
            }
        } else {
            res.json({ success: false, msg: 'NO-DATA' })
        }
    } catch (error) {
        res.json({ success: false, msg: 'terjadi kesalahan' })
    }



}


module.exports = controller;